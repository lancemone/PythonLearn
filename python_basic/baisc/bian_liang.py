# 变量赋值与交换
# 链式赋值（Chained Assignment）
a = b = c = 0
print(a, b, c)

# 序列解包（Sequence Unpacking）
a, b, c = 1, 2, 3
print(a, b, c)

p = (1, 3, 4)
a, b, c = p
print(a, b, c)

data = ['ACME', 50, 91.1, (2012, 12, 21)]
name, shares, price, date = data

# 解压赋值可以用在任何可迭代对象上面，而不仅仅是列表或者元组。 包括字符串，文件对象，迭代器和生成器。
s = 'Hello'
a, b, c, d, e = s
print(a, b, c, d, e)

# 若只想解压一部分，丢弃其他的值。对于这种情况 Python 并没有提供特殊的语法。 但是你可以使用任意变量名去占位，到时候丢掉这些变量就行了
_, shares, price, _ = data
print(shares, price)

# 如果右侧值的数量与左侧不相等,可以变量名称前面写入“*”，这样该变量的值会变成一个列表
*a, b, c = 1, 2  # 当最左侧变量带有“*”，程序会先对右侧变量赋值，然后将剩余的值（或空值）写入带有“*”的变量
# “*”可以写在任意一个变量的前方，但是只能有一个。“*”写在最右侧变量前方时，与写在最左侧变量前方时正好相反。而“*”写在中间某个变量前方时， \
# 会先对应着为两侧变量赋值，然后将剩余的值（或空值）写入带有“*”的变量
print(a, b, c)  # 输出[] 1 2
*a, b, c = 1, 2, 3, 5
print(a, b, c)  # 输出[1, 2] 3 5

# 变量交换
a, b = 1, 2
a, b = b, a
print(a, b)

# 增量赋值
a = 1
a += 1
print(a)
